Namespace(clearcache=True, inputfile='data/XY_doubles_R1000_P100_csv', list=['avg_x_double', 'avg_x_plus_y_double', 'sum_x_double', 'sum_x_plus_y_double', 'x_plus_y_double'], ntest=5, outputfile='yarn_test_cpu_1K', which='column')
/tmp/hadoop-egonzalez/nm-local-dir/usercache/egonzalez/appcache/application_1627191832073_0039/container_1627191832073_0039_01_000001/pyspark.zip/pyspark/context.py:267: RuntimeWarning: Failed to add file [file:///home/egonzalez/nec_spark/aurora4spark/tests/python/dep.zip] specified in 'spark.submit.pyFiles' to Python path:
  /tmp/hadoop-egonzalez/nm-local-dir/usercache/egonzalez/filecache/219
  /tmp/hadoop-egonzalez/nm-local-dir/usercache/egonzalez/appcache/application_1627191832073_0039/spark-381824e8-66c3-4099-9470-27ed132e36e7/userFiles-a2b3009e-7b71-48fc-980a-42478c137a12
  /tmp/hadoop-egonzalez/nm-local-dir/usercache/egonzalez/filecache/217/__spark_libs__7294770413236744710.zip/spark-core_2.12-3.1.1.jar
  /opt/rh/devtoolset-8/root/usr/lib64/python2.7/site-packages
  /opt/rh/devtoolset-8/root/usr/lib/python2.7/site-packages
  /tmp/hadoop-egonzalez/nm-local-dir/usercache/egonzalez/appcache/application_1627191832073_0039/container_1627191832073_0039_01_000001/pyspark.zip
  /tmp/hadoop-egonzalez/nm-local-dir/usercache/egonzalez/appcache/application_1627191832073_0039/container_1627191832073_0039_01_000001/py4j-0.10.9-src.zip
  /tmp/hadoop-egonzalez/nm-local-dir/usercache/egonzalez/appcache/application_1627191832073_0039/container_1627191832073_0039_01_000001/dep.zip
  /usr/lib64/python36.zip
  /usr/lib64/python3.6
  /usr/lib64/python3.6/lib-dynload
  /usr/lib64/python3.6/site-packages
  /opt/nec/ve/nlcpy/1.0.1/lib/python3.6
  /usr/lib/python3.6/site-packages
  RuntimeWarning)
================================================================================================================================================================================================================================================
Benchmark using input file = data/XY_doubles_R1000_P100_csv
================================================================================================================================================================================================================================================
root
 |-- id: double (nullable = true)
 |-- double_x: double (nullable = true)
 |-- double_y: double (nullable = true)

================================================================================================================================================================================================================================================
Starting Benchmark for column_benchmark() : ['avg_x_double', 'avg_x_plus_y_double', 'sum_x_double', 'sum_x_plus_y_double', 'x_plus_y_double']
================================================================================================================================================================================================================================================
Running avg_x_double_benchmark_test_0
Query: SELECT AVG(double_x) FROM table
== Parsed Logical Plan ==
'Project [unresolvedalias('AVG('double_x), None)]
+- 'UnresolvedRelation [table], [], false

== Analyzed Logical Plan ==
avg(double_x): double
Aggregate [avg(double_x#1) AS avg(double_x)#7]
+- SubqueryAlias table
   +- Relation[id#0,double_x#1,double_y#2] csv

== Optimized Logical Plan ==
Aggregate [avg(double_x#1) AS avg(double_x)#7]
+- Project [double_x#1]
   +- Relation[id#0,double_x#1,double_y#2] csv

== Physical Plan ==
*(2) HashAggregate(keys=[], functions=[avg(double_x#1)], output=[avg(double_x)#7])
+- Exchange SinglePartition, ENSURE_REQUIREMENTS, [id=#43]
   +- *(1) HashAggregate(keys=[], functions=[partial_avg(double_x#1)], output=[sum#12, count#13L])
      +- FileScan csv [double_x#1] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex[hdfs://localhost:9000/user/egonzalez/data/XY_doubles_R1000_P100_csv], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<double_x:double>

Finished avg_x_double_benchmark_test_0 = 4.3581366059952416
================================================================================================================================================================================================================================================
Deleted temp
================================================================================================================================================================================================================================================
Running avg_x_double_benchmark_test_1
Query: SELECT AVG(double_x) FROM table
== Parsed Logical Plan ==
'Project [unresolvedalias('AVG('double_x), None)]
+- 'UnresolvedRelation [table], [], false

== Analyzed Logical Plan ==
avg(double_x): double
Aggregate [avg(double_x#1) AS avg(double_x)#16]
+- SubqueryAlias table
   +- Relation[id#0,double_x#1,double_y#2] csv

== Optimized Logical Plan ==
Aggregate [avg(double_x#1) AS avg(double_x)#16]
+- Project [double_x#1]
   +- Relation[id#0,double_x#1,double_y#2] csv

== Physical Plan ==
*(2) HashAggregate(keys=[], functions=[avg(double_x#1)], output=[avg(double_x)#16])
+- Exchange SinglePartition, ENSURE_REQUIREMENTS, [id=#87]
   +- *(1) HashAggregate(keys=[], functions=[partial_avg(double_x#1)], output=[sum#21, count#22L])
      +- FileScan csv [double_x#1] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex[hdfs://localhost:9000/user/egonzalez/data/XY_doubles_R1000_P100_csv], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<double_x:double>

Finished avg_x_double_benchmark_test_1 = 0.407782533999125
================================================================================================================================================================================================================================================
Deleted temp
================================================================================================================================================================================================================================================
Running avg_x_double_benchmark_test_2
Query: SELECT AVG(double_x) FROM table
== Parsed Logical Plan ==
'Project [unresolvedalias('AVG('double_x), None)]
+- 'UnresolvedRelation [table], [], false

== Analyzed Logical Plan ==
avg(double_x): double
Aggregate [avg(double_x#1) AS avg(double_x)#25]
+- SubqueryAlias table
   +- Relation[id#0,double_x#1,double_y#2] csv

== Optimized Logical Plan ==
Aggregate [avg(double_x#1) AS avg(double_x)#25]
+- Project [double_x#1]
   +- Relation[id#0,double_x#1,double_y#2] csv

== Physical Plan ==
*(2) HashAggregate(keys=[], functions=[avg(double_x#1)], output=[avg(double_x)#25])
+- Exchange SinglePartition, ENSURE_REQUIREMENTS, [id=#131]
   +- *(1) HashAggregate(keys=[], functions=[partial_avg(double_x#1)], output=[sum#30, count#31L])
      +- FileScan csv [double_x#1] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex[hdfs://localhost:9000/user/egonzalez/data/XY_doubles_R1000_P100_csv], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<double_x:double>

Finished avg_x_double_benchmark_test_2 = 0.4658875029999763
================================================================================================================================================================================================================================================
Deleted temp
================================================================================================================================================================================================================================================
Running avg_x_double_benchmark_test_3
Query: SELECT AVG(double_x) FROM table
== Parsed Logical Plan ==
'Project [unresolvedalias('AVG('double_x), None)]
+- 'UnresolvedRelation [table], [], false

== Analyzed Logical Plan ==
avg(double_x): double
Aggregate [avg(double_x#1) AS avg(double_x)#34]
+- SubqueryAlias table
   +- Relation[id#0,double_x#1,double_y#2] csv

== Optimized Logical Plan ==
Aggregate [avg(double_x#1) AS avg(double_x)#34]
+- Project [double_x#1]
   +- Relation[id#0,double_x#1,double_y#2] csv

== Physical Plan ==
*(2) HashAggregate(keys=[], functions=[avg(double_x#1)], output=[avg(double_x)#34])
+- Exchange SinglePartition, ENSURE_REQUIREMENTS, [id=#175]
   +- *(1) HashAggregate(keys=[], functions=[partial_avg(double_x#1)], output=[sum#39, count#40L])
      +- FileScan csv [double_x#1] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex[hdfs://localhost:9000/user/egonzalez/data/XY_doubles_R1000_P100_csv], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<double_x:double>

Finished avg_x_double_benchmark_test_3 = 0.6514612230021157
================================================================================================================================================================================================================================================
Deleted temp
================================================================================================================================================================================================================================================
Running avg_x_double_benchmark_test_4
Query: SELECT AVG(double_x) FROM table
== Parsed Logical Plan ==
'Project [unresolvedalias('AVG('double_x), None)]
+- 'UnresolvedRelation [table], [], false

== Analyzed Logical Plan ==
avg(double_x): double
Aggregate [avg(double_x#1) AS avg(double_x)#43]
+- SubqueryAlias table
   +- Relation[id#0,double_x#1,double_y#2] csv

== Optimized Logical Plan ==
Aggregate [avg(double_x#1) AS avg(double_x)#43]
+- Project [double_x#1]
   +- Relation[id#0,double_x#1,double_y#2] csv

== Physical Plan ==
*(2) HashAggregate(keys=[], functions=[avg(double_x#1)], output=[avg(double_x)#43])
+- Exchange SinglePartition, ENSURE_REQUIREMENTS, [id=#219]
   +- *(1) HashAggregate(keys=[], functions=[partial_avg(double_x#1)], output=[sum#48, count#49L])
      +- FileScan csv [double_x#1] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex[hdfs://localhost:9000/user/egonzalez/data/XY_doubles_R1000_P100_csv], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<double_x:double>

Finished avg_x_double_benchmark_test_4 = 0.3935278580029262
================================================================================================================================================================================================================================================
Deleted temp
AVG for avg_x_double_benchmark_test = 0.5083770866670724
================================================================================================================================================================================================================================================
Running avg_x_plus_y_double_benchmark_test_0
Query: SELECT AVG(double_x + double_y) FROM table
== Parsed Logical Plan ==
'Project [unresolvedalias('AVG(('double_x + 'double_y)), None)]
+- 'UnresolvedRelation [table], [], false

== Analyzed Logical Plan ==
avg((double_x + double_y)): double
Aggregate [avg((double_x#1 + double_y#2)) AS avg((double_x + double_y))#52]
+- SubqueryAlias table
   +- Relation[id#0,double_x#1,double_y#2] csv

== Optimized Logical Plan ==
Aggregate [avg((double_x#1 + double_y#2)) AS avg((double_x + double_y))#52]
+- Project [double_x#1, double_y#2]
   +- Relation[id#0,double_x#1,double_y#2] csv

== Physical Plan ==
*(2) HashAggregate(keys=[], functions=[avg((double_x#1 + double_y#2))], output=[avg((double_x + double_y))#52])
+- Exchange SinglePartition, ENSURE_REQUIREMENTS, [id=#263]
   +- *(1) HashAggregate(keys=[], functions=[partial_avg((double_x#1 + double_y#2))], output=[sum#57, count#58L])
      +- FileScan csv [double_x#1,double_y#2] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex[hdfs://localhost:9000/user/egonzalez/data/XY_doubles_R1000_P100_csv], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<double_x:double,double_y:double>

Finished avg_x_plus_y_double_benchmark_test_0 = 2.488720299996203
================================================================================================================================================================================================================================================
Deleted temp
================================================================================================================================================================================================================================================
Running avg_x_plus_y_double_benchmark_test_1
Query: SELECT AVG(double_x + double_y) FROM table
== Parsed Logical Plan ==
'Project [unresolvedalias('AVG(('double_x + 'double_y)), None)]
+- 'UnresolvedRelation [table], [], false

== Analyzed Logical Plan ==
avg((double_x + double_y)): double
Aggregate [avg((double_x#1 + double_y#2)) AS avg((double_x + double_y))#62]
+- SubqueryAlias table
   +- Relation[id#0,double_x#1,double_y#2] csv

== Optimized Logical Plan ==
Aggregate [avg((double_x#1 + double_y#2)) AS avg((double_x + double_y))#62]
+- Project [double_x#1, double_y#2]
   +- Relation[id#0,double_x#1,double_y#2] csv

== Physical Plan ==
*(2) HashAggregate(keys=[], functions=[avg((double_x#1 + double_y#2))], output=[avg((double_x + double_y))#62])
+- Exchange SinglePartition, ENSURE_REQUIREMENTS, [id=#307]
   +- *(1) HashAggregate(keys=[], functions=[partial_avg((double_x#1 + double_y#2))], output=[sum#67, count#68L])
      +- FileScan csv [double_x#1,double_y#2] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex[hdfs://localhost:9000/user/egonzalez/data/XY_doubles_R1000_P100_csv], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<double_x:double,double_y:double>

Finished avg_x_plus_y_double_benchmark_test_1 = 0.32510370800446253
================================================================================================================================================================================================================================================
Deleted temp
================================================================================================================================================================================================================================================
Running avg_x_plus_y_double_benchmark_test_2
Query: SELECT AVG(double_x + double_y) FROM table
== Parsed Logical Plan ==
'Project [unresolvedalias('AVG(('double_x + 'double_y)), None)]
+- 'UnresolvedRelation [table], [], false

== Analyzed Logical Plan ==
avg((double_x + double_y)): double
Aggregate [avg((double_x#1 + double_y#2)) AS avg((double_x + double_y))#72]
+- SubqueryAlias table
   +- Relation[id#0,double_x#1,double_y#2] csv

== Optimized Logical Plan ==
Aggregate [avg((double_x#1 + double_y#2)) AS avg((double_x + double_y))#72]
+- Project [double_x#1, double_y#2]
   +- Relation[id#0,double_x#1,double_y#2] csv

== Physical Plan ==
*(2) HashAggregate(keys=[], functions=[avg((double_x#1 + double_y#2))], output=[avg((double_x + double_y))#72])
+- Exchange SinglePartition, ENSURE_REQUIREMENTS, [id=#351]
   +- *(1) HashAggregate(keys=[], functions=[partial_avg((double_x#1 + double_y#2))], output=[sum#77, count#78L])
      +- FileScan csv [double_x#1,double_y#2] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex[hdfs://localhost:9000/user/egonzalez/data/XY_doubles_R1000_P100_csv], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<double_x:double,double_y:double>

Finished avg_x_plus_y_double_benchmark_test_2 = 0.42923698500089813
================================================================================================================================================================================================================================================
Deleted temp
================================================================================================================================================================================================================================================
Running avg_x_plus_y_double_benchmark_test_3
Query: SELECT AVG(double_x + double_y) FROM table
== Parsed Logical Plan ==
'Project [unresolvedalias('AVG(('double_x + 'double_y)), None)]
+- 'UnresolvedRelation [table], [], false

== Analyzed Logical Plan ==
avg((double_x + double_y)): double
Aggregate [avg((double_x#1 + double_y#2)) AS avg((double_x + double_y))#82]
+- SubqueryAlias table
   +- Relation[id#0,double_x#1,double_y#2] csv

== Optimized Logical Plan ==
Aggregate [avg((double_x#1 + double_y#2)) AS avg((double_x + double_y))#82]
+- Project [double_x#1, double_y#2]
   +- Relation[id#0,double_x#1,double_y#2] csv

== Physical Plan ==
*(2) HashAggregate(keys=[], functions=[avg((double_x#1 + double_y#2))], output=[avg((double_x + double_y))#82])
+- Exchange SinglePartition, ENSURE_REQUIREMENTS, [id=#395]
   +- *(1) HashAggregate(keys=[], functions=[partial_avg((double_x#1 + double_y#2))], output=[sum#87, count#88L])
      +- FileScan csv [double_x#1,double_y#2] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex[hdfs://localhost:9000/user/egonzalez/data/XY_doubles_R1000_P100_csv], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<double_x:double,double_y:double>

Finished avg_x_plus_y_double_benchmark_test_3 = 0.30719903299905127
================================================================================================================================================================================================================================================
Deleted temp
================================================================================================================================================================================================================================================
Running avg_x_plus_y_double_benchmark_test_4
Query: SELECT AVG(double_x + double_y) FROM table
== Parsed Logical Plan ==
'Project [unresolvedalias('AVG(('double_x + 'double_y)), None)]
+- 'UnresolvedRelation [table], [], false

== Analyzed Logical Plan ==
avg((double_x + double_y)): double
Aggregate [avg((double_x#1 + double_y#2)) AS avg((double_x + double_y))#92]
+- SubqueryAlias table
   +- Relation[id#0,double_x#1,double_y#2] csv

== Optimized Logical Plan ==
Aggregate [avg((double_x#1 + double_y#2)) AS avg((double_x + double_y))#92]
+- Project [double_x#1, double_y#2]
   +- Relation[id#0,double_x#1,double_y#2] csv

== Physical Plan ==
*(2) HashAggregate(keys=[], functions=[avg((double_x#1 + double_y#2))], output=[avg((double_x + double_y))#92])
+- Exchange SinglePartition, ENSURE_REQUIREMENTS, [id=#439]
   +- *(1) HashAggregate(keys=[], functions=[partial_avg((double_x#1 + double_y#2))], output=[sum#97, count#98L])
      +- FileScan csv [double_x#1,double_y#2] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex[hdfs://localhost:9000/user/egonzalez/data/XY_doubles_R1000_P100_csv], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<double_x:double,double_y:double>

Finished avg_x_plus_y_double_benchmark_test_4 = 0.2590911360020982
================================================================================================================================================================================================================================================
Deleted temp
AVG for avg_x_plus_y_double_benchmark_test = 0.35384657533480396
================================================================================================================================================================================================================================================
Running sum_x_double_benchmark_test_0
Query: SELECT SUM(double_x) FROM table
== Parsed Logical Plan ==
'Project [unresolvedalias('SUM('double_x), None)]
+- 'UnresolvedRelation [table], [], false

== Analyzed Logical Plan ==
sum(double_x): double
Aggregate [sum(double_x#1) AS sum(double_x)#102]
+- SubqueryAlias table
   +- Relation[id#0,double_x#1,double_y#2] csv

== Optimized Logical Plan ==
Aggregate [sum(double_x#1) AS sum(double_x)#102]
+- Project [double_x#1]
   +- Relation[id#0,double_x#1,double_y#2] csv

== Physical Plan ==
*(2) HashAggregate(keys=[], functions=[sum(double_x#1)], output=[sum(double_x)#102])
+- Exchange SinglePartition, ENSURE_REQUIREMENTS, [id=#483]
   +- *(1) HashAggregate(keys=[], functions=[partial_sum(double_x#1)], output=[sum#106])
      +- FileScan csv [double_x#1] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex[hdfs://localhost:9000/user/egonzalez/data/XY_doubles_R1000_P100_csv], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<double_x:double>

Finished sum_x_double_benchmark_test_0 = 0.3184576570056379
================================================================================================================================================================================================================================================
Deleted temp
================================================================================================================================================================================================================================================
Running sum_x_double_benchmark_test_1
Query: SELECT SUM(double_x) FROM table
== Parsed Logical Plan ==
'Project [unresolvedalias('SUM('double_x), None)]
+- 'UnresolvedRelation [table], [], false

== Analyzed Logical Plan ==
sum(double_x): double
Aggregate [sum(double_x#1) AS sum(double_x)#109]
+- SubqueryAlias table
   +- Relation[id#0,double_x#1,double_y#2] csv

== Optimized Logical Plan ==
Aggregate [sum(double_x#1) AS sum(double_x)#109]
+- Project [double_x#1]
   +- Relation[id#0,double_x#1,double_y#2] csv

== Physical Plan ==
*(2) HashAggregate(keys=[], functions=[sum(double_x#1)], output=[sum(double_x)#109])
+- Exchange SinglePartition, ENSURE_REQUIREMENTS, [id=#527]
   +- *(1) HashAggregate(keys=[], functions=[partial_sum(double_x#1)], output=[sum#113])
      +- FileScan csv [double_x#1] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex[hdfs://localhost:9000/user/egonzalez/data/XY_doubles_R1000_P100_csv], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<double_x:double>

Finished sum_x_double_benchmark_test_1 = 0.6683240049969754
================================================================================================================================================================================================================================================
Deleted temp
================================================================================================================================================================================================================================================
Running sum_x_double_benchmark_test_2
Query: SELECT SUM(double_x) FROM table
== Parsed Logical Plan ==
'Project [unresolvedalias('SUM('double_x), None)]
+- 'UnresolvedRelation [table], [], false

== Analyzed Logical Plan ==
sum(double_x): double
Aggregate [sum(double_x#1) AS sum(double_x)#116]
+- SubqueryAlias table
   +- Relation[id#0,double_x#1,double_y#2] csv

== Optimized Logical Plan ==
Aggregate [sum(double_x#1) AS sum(double_x)#116]
+- Project [double_x#1]
   +- Relation[id#0,double_x#1,double_y#2] csv

== Physical Plan ==
*(2) HashAggregate(keys=[], functions=[sum(double_x#1)], output=[sum(double_x)#116])
+- Exchange SinglePartition, ENSURE_REQUIREMENTS, [id=#571]
   +- *(1) HashAggregate(keys=[], functions=[partial_sum(double_x#1)], output=[sum#120])
      +- FileScan csv [double_x#1] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex[hdfs://localhost:9000/user/egonzalez/data/XY_doubles_R1000_P100_csv], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<double_x:double>

Finished sum_x_double_benchmark_test_2 = 0.3014910870042513
================================================================================================================================================================================================================================================
Deleted temp
================================================================================================================================================================================================================================================
Running sum_x_double_benchmark_test_3
Query: SELECT SUM(double_x) FROM table
== Parsed Logical Plan ==
'Project [unresolvedalias('SUM('double_x), None)]
+- 'UnresolvedRelation [table], [], false

== Analyzed Logical Plan ==
sum(double_x): double
Aggregate [sum(double_x#1) AS sum(double_x)#123]
+- SubqueryAlias table
   +- Relation[id#0,double_x#1,double_y#2] csv

== Optimized Logical Plan ==
Aggregate [sum(double_x#1) AS sum(double_x)#123]
+- Project [double_x#1]
   +- Relation[id#0,double_x#1,double_y#2] csv

== Physical Plan ==
*(2) HashAggregate(keys=[], functions=[sum(double_x#1)], output=[sum(double_x)#123])
+- Exchange SinglePartition, ENSURE_REQUIREMENTS, [id=#615]
   +- *(1) HashAggregate(keys=[], functions=[partial_sum(double_x#1)], output=[sum#127])
      +- FileScan csv [double_x#1] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex[hdfs://localhost:9000/user/egonzalez/data/XY_doubles_R1000_P100_csv], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<double_x:double>

Finished sum_x_double_benchmark_test_3 = 0.2582679510014714
================================================================================================================================================================================================================================================
Deleted temp
================================================================================================================================================================================================================================================
Running sum_x_double_benchmark_test_4
Query: SELECT SUM(double_x) FROM table
== Parsed Logical Plan ==
'Project [unresolvedalias('SUM('double_x), None)]
+- 'UnresolvedRelation [table], [], false

== Analyzed Logical Plan ==
sum(double_x): double
Aggregate [sum(double_x#1) AS sum(double_x)#130]
+- SubqueryAlias table
   +- Relation[id#0,double_x#1,double_y#2] csv

== Optimized Logical Plan ==
Aggregate [sum(double_x#1) AS sum(double_x)#130]
+- Project [double_x#1]
   +- Relation[id#0,double_x#1,double_y#2] csv

== Physical Plan ==
*(2) HashAggregate(keys=[], functions=[sum(double_x#1)], output=[sum(double_x)#130])
+- Exchange SinglePartition, ENSURE_REQUIREMENTS, [id=#659]
   +- *(1) HashAggregate(keys=[], functions=[partial_sum(double_x#1)], output=[sum#134])
      +- FileScan csv [double_x#1] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex[hdfs://localhost:9000/user/egonzalez/data/XY_doubles_R1000_P100_csv], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<double_x:double>

Finished sum_x_double_benchmark_test_4 = 0.3092534299939871
================================================================================================================================================================================================================================================
Deleted temp
AVG for sum_x_double_benchmark_test = 0.3097340580012921
================================================================================================================================================================================================================================================
Running sum_x_plus_y_double_benchmark_test_0
Query: SELECT SUM(double_x + double_y) FROM table
== Parsed Logical Plan ==
'Project [unresolvedalias('SUM(('double_x + 'double_y)), None)]
+- 'UnresolvedRelation [table], [], false

== Analyzed Logical Plan ==
sum((double_x + double_y)): double
Aggregate [sum((double_x#1 + double_y#2)) AS sum((double_x + double_y))#137]
+- SubqueryAlias table
   +- Relation[id#0,double_x#1,double_y#2] csv

== Optimized Logical Plan ==
Aggregate [sum((double_x#1 + double_y#2)) AS sum((double_x + double_y))#137]
+- Project [double_x#1, double_y#2]
   +- Relation[id#0,double_x#1,double_y#2] csv

== Physical Plan ==
*(2) HashAggregate(keys=[], functions=[sum((double_x#1 + double_y#2))], output=[sum((double_x + double_y))#137])
+- Exchange SinglePartition, ENSURE_REQUIREMENTS, [id=#703]
   +- *(1) HashAggregate(keys=[], functions=[partial_sum((double_x#1 + double_y#2))], output=[sum#141])
      +- FileScan csv [double_x#1,double_y#2] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex[hdfs://localhost:9000/user/egonzalez/data/XY_doubles_R1000_P100_csv], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<double_x:double,double_y:double>

Finished sum_x_plus_y_double_benchmark_test_0 = 0.303186432000075
================================================================================================================================================================================================================================================
Deleted temp
================================================================================================================================================================================================================================================
Running sum_x_plus_y_double_benchmark_test_1
Query: SELECT SUM(double_x + double_y) FROM table
== Parsed Logical Plan ==
'Project [unresolvedalias('SUM(('double_x + 'double_y)), None)]
+- 'UnresolvedRelation [table], [], false

== Analyzed Logical Plan ==
sum((double_x + double_y)): double
Aggregate [sum((double_x#1 + double_y#2)) AS sum((double_x + double_y))#145]
+- SubqueryAlias table
   +- Relation[id#0,double_x#1,double_y#2] csv

== Optimized Logical Plan ==
Aggregate [sum((double_x#1 + double_y#2)) AS sum((double_x + double_y))#145]
+- Project [double_x#1, double_y#2]
   +- Relation[id#0,double_x#1,double_y#2] csv

== Physical Plan ==
*(2) HashAggregate(keys=[], functions=[sum((double_x#1 + double_y#2))], output=[sum((double_x + double_y))#145])
+- Exchange SinglePartition, ENSURE_REQUIREMENTS, [id=#747]
   +- *(1) HashAggregate(keys=[], functions=[partial_sum((double_x#1 + double_y#2))], output=[sum#149])
      +- FileScan csv [double_x#1,double_y#2] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex[hdfs://localhost:9000/user/egonzalez/data/XY_doubles_R1000_P100_csv], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<double_x:double,double_y:double>

Finished sum_x_plus_y_double_benchmark_test_1 = 0.2267601739949896
================================================================================================================================================================================================================================================
Deleted temp
================================================================================================================================================================================================================================================
Running sum_x_plus_y_double_benchmark_test_2
Query: SELECT SUM(double_x + double_y) FROM table
== Parsed Logical Plan ==
'Project [unresolvedalias('SUM(('double_x + 'double_y)), None)]
+- 'UnresolvedRelation [table], [], false

== Analyzed Logical Plan ==
sum((double_x + double_y)): double
Aggregate [sum((double_x#1 + double_y#2)) AS sum((double_x + double_y))#153]
+- SubqueryAlias table
   +- Relation[id#0,double_x#1,double_y#2] csv

== Optimized Logical Plan ==
Aggregate [sum((double_x#1 + double_y#2)) AS sum((double_x + double_y))#153]
+- Project [double_x#1, double_y#2]
   +- Relation[id#0,double_x#1,double_y#2] csv

== Physical Plan ==
*(2) HashAggregate(keys=[], functions=[sum((double_x#1 + double_y#2))], output=[sum((double_x + double_y))#153])
+- Exchange SinglePartition, ENSURE_REQUIREMENTS, [id=#791]
   +- *(1) HashAggregate(keys=[], functions=[partial_sum((double_x#1 + double_y#2))], output=[sum#157])
      +- FileScan csv [double_x#1,double_y#2] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex[hdfs://localhost:9000/user/egonzalez/data/XY_doubles_R1000_P100_csv], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<double_x:double,double_y:double>

Finished sum_x_plus_y_double_benchmark_test_2 = 0.2396969870023895
================================================================================================================================================================================================================================================
Deleted temp
================================================================================================================================================================================================================================================
Running sum_x_plus_y_double_benchmark_test_3
Query: SELECT SUM(double_x + double_y) FROM table
== Parsed Logical Plan ==
'Project [unresolvedalias('SUM(('double_x + 'double_y)), None)]
+- 'UnresolvedRelation [table], [], false

== Analyzed Logical Plan ==
sum((double_x + double_y)): double
Aggregate [sum((double_x#1 + double_y#2)) AS sum((double_x + double_y))#161]
+- SubqueryAlias table
   +- Relation[id#0,double_x#1,double_y#2] csv

== Optimized Logical Plan ==
Aggregate [sum((double_x#1 + double_y#2)) AS sum((double_x + double_y))#161]
+- Project [double_x#1, double_y#2]
   +- Relation[id#0,double_x#1,double_y#2] csv

== Physical Plan ==
*(2) HashAggregate(keys=[], functions=[sum((double_x#1 + double_y#2))], output=[sum((double_x + double_y))#161])
+- Exchange SinglePartition, ENSURE_REQUIREMENTS, [id=#835]
   +- *(1) HashAggregate(keys=[], functions=[partial_sum((double_x#1 + double_y#2))], output=[sum#165])
      +- FileScan csv [double_x#1,double_y#2] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex[hdfs://localhost:9000/user/egonzalez/data/XY_doubles_R1000_P100_csv], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<double_x:double,double_y:double>

Finished sum_x_plus_y_double_benchmark_test_3 = 0.33788568199815927
================================================================================================================================================================================================================================================
Deleted temp
================================================================================================================================================================================================================================================
Running sum_x_plus_y_double_benchmark_test_4
Query: SELECT SUM(double_x + double_y) FROM table
== Parsed Logical Plan ==
'Project [unresolvedalias('SUM(('double_x + 'double_y)), None)]
+- 'UnresolvedRelation [table], [], false

== Analyzed Logical Plan ==
sum((double_x + double_y)): double
Aggregate [sum((double_x#1 + double_y#2)) AS sum((double_x + double_y))#169]
+- SubqueryAlias table
   +- Relation[id#0,double_x#1,double_y#2] csv

== Optimized Logical Plan ==
Aggregate [sum((double_x#1 + double_y#2)) AS sum((double_x + double_y))#169]
+- Project [double_x#1, double_y#2]
   +- Relation[id#0,double_x#1,double_y#2] csv

== Physical Plan ==
*(2) HashAggregate(keys=[], functions=[sum((double_x#1 + double_y#2))], output=[sum((double_x + double_y))#169])
+- Exchange SinglePartition, ENSURE_REQUIREMENTS, [id=#879]
   +- *(1) HashAggregate(keys=[], functions=[partial_sum((double_x#1 + double_y#2))], output=[sum#173])
      +- FileScan csv [double_x#1,double_y#2] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex[hdfs://localhost:9000/user/egonzalez/data/XY_doubles_R1000_P100_csv], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<double_x:double,double_y:double>

Finished sum_x_plus_y_double_benchmark_test_4 = 0.2673002810042817
================================================================================================================================================================================================================================================
Deleted temp
AVG for sum_x_plus_y_double_benchmark_test = 0.2700612333355821
================================================================================================================================================================================================================================================
Running x_plus_y_double_benchmark_test_0
Query: SELECT double_x + double_y FROM table
== Parsed Logical Plan ==
'Project [unresolvedalias(('double_x + 'double_y), None)]
+- 'UnresolvedRelation [table], [], false

== Analyzed Logical Plan ==
(double_x + double_y): double
Project [(double_x#1 + double_y#2) AS (double_x + double_y)#176]
+- SubqueryAlias table
   +- Relation[id#0,double_x#1,double_y#2] csv

== Optimized Logical Plan ==
Project [(double_x#1 + double_y#2) AS (double_x + double_y)#176]
+- Relation[id#0,double_x#1,double_y#2] csv

== Physical Plan ==
*(1) Project [(double_x#1 + double_y#2) AS (double_x + double_y)#176]
+- FileScan csv [double_x#1,double_y#2] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex[hdfs://localhost:9000/user/egonzalez/data/XY_doubles_R1000_P100_csv], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<double_x:double,double_y:double>

Finished x_plus_y_double_benchmark_test_0 = 0.758201843003917
================================================================================================================================================================================================================================================
Deleted temp
================================================================================================================================================================================================================================================
Running x_plus_y_double_benchmark_test_1
Query: SELECT double_x + double_y FROM table
== Parsed Logical Plan ==
'Project [unresolvedalias(('double_x + 'double_y), None)]
+- 'UnresolvedRelation [table], [], false

== Analyzed Logical Plan ==
(double_x + double_y): double
Project [(double_x#1 + double_y#2) AS (double_x + double_y)#181]
+- SubqueryAlias table
   +- Relation[id#0,double_x#1,double_y#2] csv

== Optimized Logical Plan ==
Project [(double_x#1 + double_y#2) AS (double_x + double_y)#181]
+- Relation[id#0,double_x#1,double_y#2] csv

== Physical Plan ==
*(1) Project [(double_x#1 + double_y#2) AS (double_x + double_y)#181]
+- FileScan csv [double_x#1,double_y#2] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex[hdfs://localhost:9000/user/egonzalez/data/XY_doubles_R1000_P100_csv], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<double_x:double,double_y:double>

Finished x_plus_y_double_benchmark_test_1 = 0.3859894859997439
================================================================================================================================================================================================================================================
Deleted temp
================================================================================================================================================================================================================================================
Running x_plus_y_double_benchmark_test_2
Query: SELECT double_x + double_y FROM table
== Parsed Logical Plan ==
'Project [unresolvedalias(('double_x + 'double_y), None)]
+- 'UnresolvedRelation [table], [], false

== Analyzed Logical Plan ==
(double_x + double_y): double
Project [(double_x#1 + double_y#2) AS (double_x + double_y)#186]
+- SubqueryAlias table
   +- Relation[id#0,double_x#1,double_y#2] csv

== Optimized Logical Plan ==
Project [(double_x#1 + double_y#2) AS (double_x + double_y)#186]
+- Relation[id#0,double_x#1,double_y#2] csv

== Physical Plan ==
*(1) Project [(double_x#1 + double_y#2) AS (double_x + double_y)#186]
+- FileScan csv [double_x#1,double_y#2] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex[hdfs://localhost:9000/user/egonzalez/data/XY_doubles_R1000_P100_csv], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<double_x:double,double_y:double>

Finished x_plus_y_double_benchmark_test_2 = 0.7430312669966952
================================================================================================================================================================================================================================================
Deleted temp
================================================================================================================================================================================================================================================
Running x_plus_y_double_benchmark_test_3
Query: SELECT double_x + double_y FROM table
== Parsed Logical Plan ==
'Project [unresolvedalias(('double_x + 'double_y), None)]
+- 'UnresolvedRelation [table], [], false

== Analyzed Logical Plan ==
(double_x + double_y): double
Project [(double_x#1 + double_y#2) AS (double_x + double_y)#191]
+- SubqueryAlias table
   +- Relation[id#0,double_x#1,double_y#2] csv

== Optimized Logical Plan ==
Project [(double_x#1 + double_y#2) AS (double_x + double_y)#191]
+- Relation[id#0,double_x#1,double_y#2] csv

== Physical Plan ==
*(1) Project [(double_x#1 + double_y#2) AS (double_x + double_y)#191]
+- FileScan csv [double_x#1,double_y#2] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex[hdfs://localhost:9000/user/egonzalez/data/XY_doubles_R1000_P100_csv], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<double_x:double,double_y:double>

Finished x_plus_y_double_benchmark_test_3 = 0.6312215020006988
================================================================================================================================================================================================================================================
Deleted temp
================================================================================================================================================================================================================================================
Running x_plus_y_double_benchmark_test_4
Query: SELECT double_x + double_y FROM table
== Parsed Logical Plan ==
'Project [unresolvedalias(('double_x + 'double_y), None)]
+- 'UnresolvedRelation [table], [], false

== Analyzed Logical Plan ==
(double_x + double_y): double
Project [(double_x#1 + double_y#2) AS (double_x + double_y)#196]
+- SubqueryAlias table
   +- Relation[id#0,double_x#1,double_y#2] csv

== Optimized Logical Plan ==
Project [(double_x#1 + double_y#2) AS (double_x + double_y)#196]
+- Relation[id#0,double_x#1,double_y#2] csv

== Physical Plan ==
*(1) Project [(double_x#1 + double_y#2) AS (double_x + double_y)#196]
+- FileScan csv [double_x#1,double_y#2] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex[hdfs://localhost:9000/user/egonzalez/data/XY_doubles_R1000_P100_csv], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<double_x:double,double_y:double>

Finished x_plus_y_double_benchmark_test_4 = 0.6557130770015647
================================================================================================================================================================================================================================================
Deleted temp
AVG for x_plus_y_double_benchmark_test = 0.6766552819996529
================================================================================================================================================================================================================================================
================================================================================================================================================================================================================================================
RESULTS:
Test Run = column_benchmark, Operation = ['avg_x_double', 'avg_x_plus_y_double', 'sum_x_double', 'sum_x_plus_y_double', 'x_plus_y_double'].
Saved results to output/column_yarn_test_cpu_1K
================================================================================================================================================================================================================================================
[Row(test='avg_x_double', test_0=4.3581366059952416, test_1=0.407782533999125, test_2=0.4658875029999763, test_3=0.6514612230021157, test_4=0.3935278580029262, mean_exclude_max_and_min=0.5083770866670724), Row(test='avg_x_plus_y_double', test_0=2.488720299996203, test_1=0.32510370800446253, test_2=0.42923698500089813, test_3=0.30719903299905127, test_4=0.2590911360020982, mean_exclude_max_and_min=0.35384657533480396), Row(test='sum_x_double', test_0=0.3184576570056379, test_1=0.6683240049969754, test_2=0.3014910870042513, test_3=0.2582679510014714, test_4=0.3092534299939871, mean_exclude_max_and_min=0.3097340580012921), Row(test='sum_x_plus_y_double', test_0=0.303186432000075, test_1=0.2267601739949896, test_2=0.2396969870023895, test_3=0.33788568199815927, test_4=0.2673002810042817, mean_exclude_max_and_min=0.2700612333355821), Row(test='x_plus_y_double', test_0=0.758201843003917, test_1=0.3859894859997439, test_2=0.7430312669966952, test_3=0.6312215020006988, test_4=0.6557130770015647, mean_exclude_max_and_min=0.6766552819996529)]
